/*
  angular-drag-to-reorder v0.0.2
  http://brandly.github.io/angular-drag-to-reorder/
*/
(function(){angular.module("mb-dragToReorder",[]).directive("dragToReorder",[function(){return{link:function(r,e,a){var o,n,t,d,s,i;if(null==r[a.dragToReorder])throw"Must specify the list to reorder";return n="dragging",e.attr("draggable",!0),e.on("dragstart",function(a){return e.addClass(n),a.dataTransfer.setData("text/plain",r.$index)}),e.on("dragend",function(){return e.removeClass(n)}),i="dropping",d="dropping-above",s="dropping-below",o=function(r){var a;return r.preventDefault(),a=r.offsetY||r.layerY,a<this.offsetHeight/2?(e.removeClass(s),e.addClass(d)):(e.removeClass(d),e.addClass(s))},t=function(o){var n,l,f,u,g,v,p;if(o.preventDefault(),n=parseInt(o.dataTransfer.getData("text/plain"),10),g=r[a.dragToReorder],u=null,u=e.hasClass(d)?n<r.$index?r.$index-1:r.$index:n<r.$index?r.$index:r.$index+1,f=g[n],u>n)for(l=v=n;u>v;l=v+=1)g[l]=g[l+1];else if(n>u)for(l=p=n;p>u;l=p+=-1)g[l]=g[l-1];return g[u]=f,r.$apply(function(){return r.$emit("dragToReorder.reordered",{array:g,item:f,from:n,to:u})}),e.removeClass(i),e.removeClass(d),e.removeClass(s),e.off("drop",t)},e.on("dragenter",function(){return e.hasClass(n)?void 0:(e.addClass(i),e.on("dragover",o),e.on("drop",t))}),e.on("dragleave",function(){return e.removeClass(i),e.removeClass(d),e.removeClass(s),e.off("dragover",o),e.off("drop",t)})}}}])}).call(this);